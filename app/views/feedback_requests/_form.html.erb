<%
  prefix ||= 'feedback_request'
  form_id ||= "#{prefix}-form"
  entity ||= FeedbackRequest.new
  required_fields ||= %i[name phone email comment]
  visible_fields ||= %i[name phone email comment]
%>
<%=
  form_with(
      model: entity,
      html: {
          id: form_id,
          class: 'feedback_request-form'
      }
  ) do |f|
%>
  <div class="fields state-1">
    <% if visible_fields.include?(:name) %>
      <div class="name <%= required_fields.include?(:name) ? 'required' : '' %>">
        <%=
          f.text_field(
              :name,
              aria: {
                  label: t('activerecord.attributes.feedback_request.name')
              },
              class: 'input-text',
              id: "#{prefix}_name",
              maxlength: FeedbackRequest::NAME_LIMIT,
              placeholder: t('activerecord.attributes.feedback_request.name'),
              required: required_fields.include?(:name),
              size: nil
          )
        %>
        <span class="icon"></span>
      </div>
    <% end %>
    <% if visible_fields.include?(:phone) && !local_assigns[:hide_phone] %>
      <div class="phone <%= required_fields.include?(:phone) ? 'required' : '' %>">
        <%=
          f.phone_field(
              :phone,
              aria: {
                  label: t('activerecord.attributes.feedback_request.phone')
              },
              class: 'input-text',
              id: "#{prefix}_phone",
              maxlength: FeedbackRequest::PHONE_LIMIT,
              placeholder: t('activerecord.attributes.feedback_request.phone'),
              required: required_fields.include?(:phone),
              size: nil
          )
        %>
        <span class="icon"></span>
      </div>
    <% end %>
    <% if visible_fields.include?(:email) && !local_assigns[:hide_email] %>
      <div class="email <%= required_fields.include?(:email) ? 'required' : '' %>">
        <%=
          f.email_field(
              :email,
              aria: {
                  label: t('activerecord.attributes.feedback_request.email')
              },
              class: 'input-text',
              id: "#{prefix}_email",
              maxlength: FeedbackRequest::EMAIL_LIMIT,
              placeholder: t('activerecord.attributes.feedback_request.email'),
              required: required_fields.include?(:email),
              size: nil
          )
        %>
        <span class="icon"></span>
      </div>
    <% end %>
    <% if visible_fields.include?(:comment) && !local_assigns[:hide_comment] %>
      <div class="comment <%= required_fields.include?(:comment) ? 'required' : '' %>">
        <%=
          f.text_area(
              :comment,
              aria: {
                  label: t('activerecord.attributes.feedback_request.comment')
              },
              class: 'input-text',
              cols: 20,
              data: {
                  max_rows: 20,
                  min_rows: 5
              },
              id: "#{prefix}_comment",
              maxlength: FeedbackRequest::COMMENT_LIMIT,
              placeholder: t('activerecord.attributes.feedback_request.comment'),
              required: required_fields.include?(:comment),
              rows: 5
          )
        %>
        <span class="icon"></span>
      </div>
    <% end %>
  </div>
  <div class="consent state-1">
    <%= check_box_tag :agree, '1', false, class: 'visually-hidden', id: nil, tabindex: -1 %>
    <%= f.check_box :consent, class: 'input-flag', id: "#{prefix}_consent", required: true %>
    <%= f.label :consent, for: "#{prefix}_consent" %>
  </div>
  <div class="buttons state-1">
    <%= hidden_field_tag 'form_id', form_id %>
    <%= button_tag(t(:submit), class: 'button-primary') %>
  </div>

  <div class="result hidden state-2"><%= t('.result') %></div>
<% end %>
