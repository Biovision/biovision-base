:root {
  --font-size-xxxl: #{$font-size-xxxl};
  --font-size-xxl: #{$font-size-xxl};
  --font-size-xl: #{$font-size-xl};
  --font-size-large: #{$font-size-large};
  --font-size-increased: #{$font-size-increased};
  --font-size-normal: #{$font-size-normal};
  --font-size-decreased: #{$font-size-decreased};
  --font-size-small: #{$font-size-small};
  --font-size-xs: #{$font-size-xs};

  --spacer-s: #{$spacer-s};
  --spacer-xxxs: .2rem;
  --spacer-xxs: calc(var(--spacer-s) / 4);
  --spacer-xs: calc(var(--spacer-s) / 2);
  --spacer-m: calc(var(--spacer-s) * 2);
  --spacer-l: calc(var(--spacer-s) * 3);
  --spacer-xl: calc(var(--spacer-s) * 4);
  --spacer-xxl: calc(var(--spacer-s) * 6);
}

*,
::after,
::before {
  box-sizing: border-box;
}

html {
  font: 400 10px $font-family-main;
  margin: 0;
  padding: 0;
  -webkit-text-size-adjust: none;
  -moz-text-size-adjust: none;
  -ms-text-size-adjust: none;
}

body {
  font-size: $font-size-normal;
  margin: 0;
  padding: 0;
}

@supports (--css: vars) {
  body {
    font-size: var(--font-size-normal);
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $font-family-heading;
  margin: 0;
}

a {
  color: $link-color;
  text-decoration: none;
  transition: color .125s;

  &:visited {
    color: $link-color-visited;
  }

  &:active,
  &:focus,
  &:hover {
    color: $link-color-hover;
    text-decoration: underline;
  }
}

figure {
  margin: 0;
}

img {
  max-width: 100%;
}

article {
  position: relative;
}

button,
input,
textarea {
  font-size: inherit;
}

ul.actions {
  align-items: center;
  background: #fff;
  border-radius: .4rem;
  box-shadow: $block-shadow;
  display: flex;
  justify-content: flex-end;
  margin: 0;
  opacity: .5;
  padding: 0;
  position: absolute;
  right: $spacer-xxs;
  top: $spacer-xxs;
  transition: .25s;

  &:hover {
    opacity: 1;
  }

  > li {
    flex-basis: 1.6rem;
    height: 1.6rem;
    line-height: 1.6rem;
    list-style: none;
    margin: $spacer-xxs;
    padding: 0;

    &.danger {
      margin-left: $spacer-m;
    }

    &.priority-changer {
      align-items: center;
      display: flex;
      flex-basis: 3.6rem;
      justify-content: space-between;
    }
  }

  a,
  button {
    display: inline-block;
    font-size: $font-size-decreased;
    height: 1.6rem;
    line-height: 1.6rem;
    margin: 0;
    padding: 0;
    width: 1.6rem;
  }

  img {
    max-height: 1.6rem;
    max-width: 1.6rem;
  }
}

@supports (--css: vars) {
  ul.actions {
    right: var(--spacer-xxs);
    top: var(--spacer-xxs);

    > li {
      margin: var(--spacer-xxs);

      &.danger {
        margin-left: var(--spacer-m);
      }
    }

    a,
    button {
      font-size: var(--font-size-decreased);
    }
  }
}

.list-of-entities {
  margin: $spacer-s 0;
  padding: 0;

  > li {
    align-items: flex-start;
    background: $row-background-odd;
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    margin: 0;
    padding: $spacer-xs;

    &:nth-of-type(even) {
      background: $row-background-even;
    }

    .image {
      flex: none;
      margin: 0 $spacer-xs 0 0;
      text-align: center;
      width: 8rem;

      img {
        max-height: 8rem;
        max-width: 8rem;
      }

      & + .data {
        max-width: calc(100% - 8.8rem);
      }
    }

    .data {
      flex: 1;
      position: relative;

      .info {
        font-size: $font-size-decreased;
      }

      .secondary {
        color: $text-color-secondary;
      }

      .truncate {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      .compact {
        align-items: center;
        display: flex;
        flex-wrap: wrap;

        .toggleable,
        > span {
          margin: 0 $spacer-xs;
        }
      }

      .children {
        border-left: .1rem dotted;
        margin-left: $spacer-s;
      }
    }
  }
}

ul.list-of-entities {
  ul.actions {
    > li.priority-changer {
      display: none;
    }
  }
}

ol.list-of-entities {
  > li[data-number]::before {
    content: attr(data-number) ":";
    display: inline-block;
    margin: 0 $spacer-xs 0 0;
    text-align: right;
    width: 2.4rem;
  }
}

@supports (--css: vars) {
  .list-of-entities {
    margin: var(--spacer-s) 0;

    > li {
      padding: var(--spacer-xs);

      .image {
        margin-right: var(--spacer-xs);

        img {
          max-height: 8rem;
          max-width: 8rem;
        }

        & + .data {
          max-width: calc(100% - 8rem - var(--spacer-xs));
        }
      }

      .data {
        .info {
          font-size: var(--font-size-decreased);
        }

        .compact {
          .toggleable,
          > span {
            margin: 0 var(--spacer-xs);
          }
        }

        .children {
          margin-left: var(--spacer-s);
        }
      }
    }
  }

  ol.list-of-entities {
    > li[data-number]::before {
      margin-right: var(--spacer-xs);
    }
  }
}

.entity-links {
  margin: 0;
  padding: 0;

  li {
    list-style: none;
    margin: 0;
    padding: $spacer-xxs;
    position: relative;
  }

  label {
    cursor: pointer;
    display: inline-block;
    padding: $spacer-xxxs $spacer-s;
    transition: .125s;
  }

  input[type=checkbox] {
    &:not(:checked) + label {
      background: #fafafa;
      color: $text-color-secondary;
    }

    &:checked + label {
      background: rgb(200, 255, 200);
      box-shadow: 0 0 .3rem .1rem rgba(0, 127, 0, .25);
    }

    &:disabled + label {
      opacity: .5;
      filter: grayscale(75%);
    }
  }
}

@supports (--css: vars) {
  .entity-links {
    li {
      padding: var(--spacer-xxs);
    }

    label {
      padding: var(--spacer-xxxs) var(--spacer-s);
    }
  }
}

.breadcrumbs {
  a {
    background: image_url('biovision/base/icons/breadcrumb.svg') no-repeat bottom .1rem right / .6rem 1.2rem;
    padding-right: 1rem;
    transition: background .25s;

    &:active,
    &:focus,
    &:hover {
      background-image: image_url('biovision/base/icons/breadcrumb-hover.svg');
    }
  }
}

form {
  margin: 0;
  padding: 0;

  .guideline {
    color: $text-color-secondary;
    font-size: $font-size-decreased;
    margin: 0;

    &::before {
      content: '\261E';
      margin-right: $spacer-xxs;
    }
  }

  .check-result-error {
    color: #ff0000;

    &::before {
      content: '\261D';
      margin-right: $spacer-xxs;
    }

    &:empty {
      display: none;
    }
  }

  dl {
    margin: 0;
    padding: 0;
  }

  dt {
    font: 500 $font-size-increased $font-family-main;

    &:not(:first-of-type) {
      border-top: $border-secondary;
      margin: $spacer-xs 0 0 0;
      padding: $spacer-xxs 0 0 0;
    }
  }

  dd {
    padding: .2rem 0;

    ul {
      margin: 0 auto;
      padding: 0;

      li {
        list-style: none;
        margin: 0;
        padding: 0;
        position: relative;
      }
    }
  }

  input {
    font-size: inherit;
  }

  ul.flags {
    margin: $spacer-xs 0;
    padding: 0;

    li {
      list-style: none;
      margin: 0;
      padding: 0;
    }
  }
}

@supports (--css: vars) {
  form {
    .guideline {
      font-size: var(--font-size-decreased);

      &::before {
        margin-right: var(--spacer-xxs);
      }
    }

    .check-result-error {
      &::before {
        margin-right: var(--spacer-xxs);
      }
    }

    ul.flags {
      margin: var(--spacer-xs) 0;
    }

    dt {
      font-size: var(--font-size-increased);

      &:not(:first-of-type) {
        margin-top: var(--spacer-xs);
        padding-top: var(--spacer-xxs);
      }
    }
  }
}

.hidden {
  display: none !important;
}

.visually-hidden {
  border: none;
  clip: rect(0 0 0 0);
  height: auto;
  left: -10000rem;
  margin: 0;
  opacity: .05;
  overflow: hidden;
  padding: 0;
  pointer-events: none;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.proportional-container {
  padding: 0;
  position: relative;

  > * {
    bottom: 0;
    height: 100%;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    width: 100%;
  }

  &::before {
    content: '\A';
    display: block;
  }

  &.r-1x1::before {
    padding-top: 100%;
  }

  &.r-5x4::before {
    padding-top: 80%;
  }

  &.r-4x3::before {
    padding-top: 75%;
  }

  &.r-3x2::before {
    padding-top: 66.67%;
  }

  &.r-16x9::before {
    padding-top: 56.25%;
  }

  &.r-2x1::before {
    padding-top: 50%;
  }
}

input.control:not(:checked) + * {
  display: none;
}

.covered {
  overflow: hidden;

  > * {
    height: 100%;
    object-fit: cover;
    width: 100%;
  }
}

.containing {
  overflow: hidden;

  > * {
    height: 100%;
    object-fit: contain;
    width: 100%;
  }
}